rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    // NOTE: This relies on Custom Claims being set for the user.
    // You must use a server-side process (e.g., Cloud Function) to set this.
    function isAdmin() {
      return isSignedIn() && request.auth.token.role == 'admin';
    }

    // Draws Collection
    // - Anyone can view draws.
    // - Only admins can create, update, or delete draws.
    match /draws/{drawId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Users Collection
    match /users/{userId} {
      // Anyone can read user profiles (needed for winner names, etc.).
      allow read: if true;
      
      // Allow creation if the user is signed in (for registration).
      allow create: if isSignedIn();

      // Allow updates if:
      // 1. The user is the owner of the document.
      // 2. An admin is performing the update.
      // 3. The referral system is updating only 'ticketIds' and 'referralsMade'.
      allow update: if isOwner(userId) || isAdmin() || 
        (isSignedIn() && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['ticketIds', 'referralsMade']));
      
      // Only admins can delete users.
      allow delete: if isAdmin();
    }

    // Tickets Collection
    match /tickets/{ticketId} {
      // Anyone can read ticket data.
      allow read: if true;
      
      // Allow creation if:
      // 1. The user is signed in (for purchasing a ticket).
      // 2. An admin is creating it (for mock data).
      allow create: if isSignedIn();

      // Nobody should update or delete tickets.
      allow update, delete: if false;
    }
  }
}
