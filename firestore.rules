
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }
    
    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users can only read and update their own data. They can create their own user document.
    match /users/{userId} {
      allow read, update: if isSignedIn() && isOwner(userId);
      allow create: if isSignedIn();
    }

    // Anyone can read draw information. Only admins should write (not enforced yet).
    match /draws/{drawId} {
      allow read: if true;
      allow write: if false; // Lock down writes for now. To be replaced with admin check.
    }

    // Users can only create tickets for themselves. They can read tickets they own.
    match /tickets/{ticketId} {
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      allow read: if isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.ticketIds[?ticketId];
      allow update, delete: if false; // Nobody can update or delete tickets
    }
    
    // Public announcements can be read by anyone
    match /draws/{drawId}/publicAnnouncements/{announcementId} {
        allow read: if true;
        allow write: if false; // Only backend processes can write here
    }

  }
}
