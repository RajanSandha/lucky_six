rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // HELPER FUNCTIONS
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    function isAdmin() {
      // This checks for a custom claim. You must set this on the user's auth token
      // from a backend environment for admin users.
      // e.g. {role: 'admin'}
      return isSignedIn() && request.auth.token.role == 'admin';
    }
    
    // Check if the only fields being updated are for the referral system.
    function isReferralUpdate() {
        return request.resource.data.diff(resource.data).affectedKeys().hasOnly(['ticketIds', 'referralsMade']);
    }

    // COLLECTIONS
    match /users/{userId} {
      // Allow anyone to get a user's public profile (for winner display name)
      allow get: if true;
      
      // Allow querying the users collection (needed for checking if a user exists on registration)
      allow list: if true;

      // Allow a user to create their own document
      allow create: if isOwner(userId);
      
      // Allow a user to update their own document.
      // Also allow an update to another user ONLY for referral system fields.
      allow update: if isOwner(userId) || (isSignedIn() && isReferralUpdate());
      
      // No one can delete users from the client
      allow delete: if false;
    }

    match /draws/{drawId} {
      // Anyone can view draws
      allow read: if true;
      
      // Only admins can create, update, or delete draws
      allow write: if isAdmin();
    }

    match /tickets/{ticketId} {
      // Anyone can view any ticket (for winner announcements)
      allow read: if true;

      // Only signed-in users can create tickets, or an admin (for mock data)
      allow create: if isSignedIn() || isAdmin();
      
      // Tickets cannot be updated or deleted from the client
      allow update: if false;
      allow delete: if false;
    }
  }
}
