rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isUser(userId) {
      // In this app, the user ID is the Firestore document ID, not the Firebase Auth UID.
      // We will trust the server-side logic to create user docs and tickets correctly.
      // For read/update, we check if the user is signed in.
      return isSignedIn();
    }

    // Publicly readable, admin-only writable
    match /draws/{drawId} {
      allow read: if true;
      allow write: if false; // Only backend can write for now
    }
    
    // Users can read/write their own data
    match /users/{userId} {
      allow read: if isUser(userId);
      // Only signed-in users can create a user document. The server logic handles assigning the correct ID.
      allow create: if isSignedIn();
      allow update: if isUser(userId);
      allow delete: if false; // No user deletion
    }

    // Tickets can be created by signed-in users for themselves. Read is restricted.
    match /tickets/{ticketId} {
      // Only signed-in users can create tickets. The server logic assigns the userId.
      allow create: if isSignedIn();
      // Users can only read tickets if they are the owner of the ticket.
      allow read: if isSignedIn() && resource.data.userId == request.resource.data.id;
      allow update, delete: if false;
    }

    // Public announcements can be read by anyone
    match /publicAnnouncements/{announcementId} {
        allow read: if true;
        allow write: if false; // Only backend can write
    }
  }
}